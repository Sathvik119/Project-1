# -*- coding: utf-8 -*-
"""Customer Segmentation Using Clustering

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10PXe6nUqSQb7E3q3QjPnN7pOJ07Qxox2

Importing The Dependencies
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans

"""Data Analysis And Collection"""

customer_data=pd.read_csv('/content/Mall_Customers.csv')

customer_data.head()

customer_data.shape

customer_data.info()

customer_data.isnull().sum()

"""Choosing The Annual Income And Spending Score Column"""

x=customer_data.iloc[:,[3,4]].values

print(x)

"""Choosing The Number Of Clusters

WCSS-> Within Clusters Sum Of Squares
"""

#finding wcss value for different number of clusters
wcss=[]
for i in range(1,11):
  kmeans=KMeans(n_clusters=i,init='k-means++',random_state=42)
  kmeans.fit(x)
  wcss.append(kmeans.inertia_)

#plotting an elbow graph
sns.set()
plt.plot(range(1,11),wcss)
plt.title('The Elbow Point Graph')
plt.xlabel('Number Of Clusters')
plt.ylabel('WCSS')
plt.show()

"""Optimum Number Of Clusters=5

Training The K-Means Clustering Model
"""

#Optimum number of clusters=5
#Training the K-Means Clustering 
kmeans=KMeans(n_clusters=5,init='k-means++',random_state=0)

#return a label for each data point based on their cluster
Y=kmeans.fit_predict(x)
print(Y)

"""5 Clusters= 0,1,2,3,4

Visualizing All The Clusters
"""

#plotting all the clusters and their centroids

plt.figure(figsize=(8,8))
plt.scatter(x[Y==0,0], x[Y==0,1], s=50, c='green', label='Cluster 1')
plt.scatter(x[Y==1,0], x[Y==1,1], s=50, c='red', label='Cluster 2')
plt.scatter(x[Y==2,0], x[Y==2,1], s=50, c='yellow', label='Cluster 3')
plt.scatter(x[Y==3,0], x[Y==3,1], s=50, c='violet', label='Cluster 4')
plt.scatter(x[Y==4,0], x[Y==4,1], s=50, c='blue', label='Cluster 5')

#plot the centroids
plt.scatter(kmeans.cluster_centers_[:,0], kmeans.cluster_centers_[:,1], s=100, c='cyan', label='centroids')

plt.title('Customer Groups')
plt.xlabel('Annual Income')
plt.ylabel('Spending Score')
plt.show()

import pandas as pd
pd.show_versions()

import matplotlib
print('matplotlib: {}'.format(matplotlib.__version__))

import sklearn
print(sklearn.__version__)

import seaborn as sns
sns.__version__

